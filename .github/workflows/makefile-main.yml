name: Main

on:
  push:
    branches: [ "main" ]
  release:
    types: [created]
  create:
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Prerequisites
      run: |
        echo "     ##### Installing AgDev"
        sudo apt-get install -y build-essential gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi lcov
        wget https://github.com/CE-Programming/toolchain/releases/download/v12.1/CEdev-Linux.tar.gz
        tar zxpvf CEdev-Linux.tar.gz
        rm CEdev-Linux.tar.gz
        mv CEdev agdev
        wget https://github.com/pcawte/AgDev/releases/download/v3.0.0/AgDev_release_v3.0.0_linux.zip
        unzip -d agdev -o AgDev_release_v3.0.0_linux.zip
        echo "AGDEV_BASE=$(pwd)/agdev" >> $GITHUB_ENV
        rm AgDev_release_v3.0.0_linux.zip
        echo "     ##### Updating GITHUB_PATH"
        echo "$(pwd)/agdev/bin" >> $GITHUB_PATH

        echo "##### Installing agon-ez80asm"
        mkdir -p agon-ez80asm
        cd agon-ez80asm
        wget https://github.com/envenomator/agon-ez80asm/releases/download/v1.8/ez80asm_linux_elf_x86_64.gz
        tar zxpvf ez80asm_linux_elf_x86_64.gz
        rm ez80asm_linux_elf_x86_64.gz
        echo "$(pwd)/bin" >> $GITHUB_PATH

    - name: Check Binaries
      run: |
        echo "     ##### Checking Binaries"
        which ez80-clang
        ez80-clang -v
        which ez80asm
        ez80asm -h

    - name: Make All
      run: make all

    - name: Package
      run: make package

    - name: Upload Release Artifacts
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v3
      with:
        name: release-artifacts
        path: release/*

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download Release Artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-artifacts
        path: release

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: release/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}